#todo: variant definition
Vehicle: [
   Bicycle: ()
   E-Scooter: (battery-capacity :Num)
   Car: (weight :Num, cylinder :Num)
] datadef

#constants
CO2-PER-KM-E-Scooter: 0.1 ! 
ENERGY-PER-KM: 500 ! #500 mAh per km
CO2-FOR-CHARGING: 20 !
CO2-PER-KM-PER-KG2-CAR: 0.0001 !

#calculating the co2 emission per km depending of the vehicle
co2-for-km: (vehicle :Arr, km :Num) {
    {vehicle bicycle?} {0}
    {vehicle e-scooter?} {
        CO2-PER-KM-E-Scooter km * ENERGY-PER-KM km * vehicle e-scooter-battery-capacity / ceil CO2-FOR-CHARGING * +}
    {vehicle car?} {vehicle car-weight 2 pow CO2-PER-KM-PER-KG2-CAR * vehicle car-cylinder * km *}
} cond-fun

#test function
test-co2-for-km: (){
    bicycle bike!
    1000 4 car test-car!
    1000 3 car test-car2!
    20000 e-scooter test-e-scooter!
    10000 e-scooter test-e-scooter2!

    #todo: Add at least 3 further tests for each vehicle type
    bike 1 co2-for-km 0 test=
    bike 10 co2-for-km 0 test=
    bike 0 co2-for-km 0 test=
    bike 1901 co2-for-km 0 test=
    test-car 10 co2-for-km 4000 test=
    test-car2 42 co2-for-km 12600 test=
    test-car 3 co2-for-km 1200 test=
    test-car2 500 co2-for-km 150000 test=
    test-e-scooter 10 co2-for-km 21 test=
    test-e-scooter 15 co2-for-km 21.5 test=
    test-e-scooter2 1 co2-for-km 20.1 test=
    test-e-scooter2 64 co2-for-km 86.4 test=
} fun

test-co2-for-km
test-stats


#create dummy data
# weight cylinder constructor
1200.0 3 car small-car!
1500.0 4 car normal-car!
3000.0 6 car suv!

# battery-capacity contructor
12000 e-scooter super-scooter!

# no parameters constructor
bicycle old-bike!
bicycle new-bike!

[   #[vecicle, km]
    [small-car, 3000],
    [small-car, 10000],
    [small-car, 1500],
    [normal-car, 6000],
    [suv, 20000],
    [suv, 1500],
    [old-bike, 5000],
    [old-bike, 2000],
    [old-bike, 100],
    [old-bike, 800],
    [new-bike, 4000],
    [new-bike, 6000],
    [new-bike, 2000],
    [new-bike, 10],
    [super-scooter, 150],
    [super-scooter, 2000],
    [super-scooter, 850],
] vehicle-park-with-km!


#todo: calculate the sum of CO2 emission for the given array vehicle-park-with-km
0 vehicle-park-with-km { p! p .0 p .1 co2-for-km +} for

"Sum of CO2 emissions: " print
println #should be 127766840